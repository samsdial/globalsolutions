html{box-sizing:border-box}*,*::after,*::before{box-sizing:inherit}html *{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}html{font-size:62.5%}body{font-size:1.5rem;font-family:"Oswald",sans-serif;background-color:#fff;position:relative}a{text-decoration:none;color:#4DAEDE;-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}img{max-width:100%}input,textarea,select{font-family:"Oswald",sans-serif;font-size:1.6rem}p{font-family:"Oswald",sans-serif;font-weight:400;color:gray;line-height:25px}h1,h2,h3,h4,h5,h6,p{margin:0;padding:0}ul,ol{padding-left:19px}.box_logo{display:block;text-align:center}.logo{display:inline-block}.logo_lys--min{background:transparent url("../images/theme/logo_lys--min.png") no-repeat center center/100%;width:175px;height:58px}@font-face{font-family:'icomoon';src:url("../fonts/icomoon.eot?8njsdt");src:url("../fonts/icomoon.eot?8njsdt#iefix") format("embedded-opentype"),url("../fonts/icomoon.ttf?8njsdt") format("truetype"),url("../fonts/icomoon.woff?8njsdt") format("woff"),url("../fonts/icomoon.svg?8njsdt#icomoon") format("svg");font-weight:normal;font-style:normal}[class^="icon-"],[class*=" icon-"]{font-family:'icomoon' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon{display:inline-block}.icon_size--em1{font-size:1rem}.icon_size--em2{font-size:2rem}.icon_size--em3{font-size:3rem}.icon_size--x10{font-size:1.2em}.icon_size--x15{font-size:1.5em}.icon_size--x20{font-size:2em}.icon_size--x50{font-size:5em}.icon-facebook:before{content:"\e900"}.icon-instagram:before{content:"\e901"}.icon-twitter:before{content:"\e902"}.icon-comerce:before{content:"\e903"}.icon-office:before{content:"\e904"}.icon-student:before{content:"\e905"}.icon-search:before{content:"\e906"}.icon-refresh:before{content:"\e907"}.icon-left:before{content:"\e908"}.icon-right:before{content:"\e909"}.icon-award:before{content:"\e90a"}.bgi_item{background-position:center center;background-repeat:no-repeat;background-size:cover}.bgi_inter{width:100%;height:auto;position:relative}.bgi_inter--blue{overflow:hidden}.bgi_inter--blue:after{content:"";width:100%;height:120vh;background-color:rgba(77,174,222,0.8);position:absolute;top:0}.bgi_service{width:100%;height:300px}.bgi_service--min{width:100%;height:100px}.bgi_service--max{width:100%;height:200px}.bgi_about{width:100%;height:300px}.bgc--white{background-color:#fff}.bgc--gainsboro{background-color:#d3d3d3}.bgc--blue{background-color:#4DAEDE}.bgc--black{background-color:#000}.bgc--lightBlack{background-color:#646464}.bgc_rgba--blue{background-color:rgba(77,174,222,0.8)}.bdr_radius--box3{border-radius:3px}.bdr_radius--full{border-radius:50%}.bdr_blue--x5{border:5px solid #4DAEDE}.cl--white{color:#fff}.cl--white h2,.cl--white h3,.cl--white h4,.cl--white h5,.cl--white h6,.cl--white p,.cl--white b,.cl--white small{color:#fff}.cl--blue{color:#4DAEDE}.cl--blue h2,.cl--blue h3,.cl--blue h4,.cl--blue h5,.cl--blue h6,.cl--blue p,.cl--blue b,.cl--blue small{color:#4DAEDE}.cl--darkgray{color:#a9a9a9}.cl--darkgray h2,.cl--darkgray h3,.cl--darkgray h4,.cl--darkgray h5,.cl--darkgray h6,.cl--darkgray p,.cl--darkgray b,.cl--darkgray small{color:#a9a9a9}.cl--gray{color:gray}.cl--gray h2,.cl--gray h3,.cl--gray h4,.cl--gray h5,.cl--gray h6,.cl--gray p,.cl--gray b,.cl--gray small{color:gray}.cl--gainsboro{color:#d3d3d3}.cl--gainsboro h2,.cl--gainsboro h3,.cl--gainsboro h4,.cl--gainsboro h5,.cl--gainsboro h6,.cl--gainsboro p,.cl--gainsboro b,.cl--gainsboro small{color:#d3d3d3}.cl--silver{color:silver}.cl--silver h2,.cl--silver h3,.cl--silver h4,.cl--silver h5,.cl--silver h6,.cl--silver p,.cl--silver b,.cl--silver small{color:silver}.box_shadow{box-shadow:0 1px 50px rgba(0,0,0,0.05);-webkit-transition:all 0.7s ease 0s;-moz-transition:all 0.7s ease 0s;transition:all 0.7s ease 0s}.box_shadow--header{box-shadow:0px -8px 0px 0px rgba(77,174,222,0.8)}.box_service{position:relative;overflow:hidden}.box_service button{-webkit-transition:opacity 0.35s,-webkit-transform .35s;-moz-transition:opacity 0.35s,-moz-transform .35s;transition:opacity 0.35s,transform .35s;-webkit-transform:translate3d(0, 50px, 0);-moz-transform:translate3d(0, 50px, 0);-ms-transform:translate3d(0, 50px, 0);-o-transform:translate3d(0, 50px, 0);transform:translate3d(0, 50px, 0)}.box_service .figure{position:relative;width:100%;height:20vh;display:block;overflow:hidden}.box_service .figure .bgi_item{width:100%;height:20vh;background-size:100%;-webkit-transition:all 0.7s ease 0s;-moz-transition:all 0.7s ease 0s;transition:all 0.7s ease 0s}.box_service:hover .box_featured,.box_service:active .box_featured,.box_service:focus .box_featured{opacity:1}.box_service:hover button,.box_service:active button,.box_service:focus button{-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}.box_service:hover .bgi_item,.box_service:active .bgi_item,.box_service:focus .bgi_item{background-size:200%}.box_service:hover.box_shadow,.box_service:active.box_shadow,.box_service:focus.box_shadow{box-shadow:0 1px 50px rgba(0,0,0,0.2)}.box_icon{vertical-align:middle}.box_icon span{width:100px;height:100px;vertical-align:middle;position:relative}.box_icon span:before{position:absolute;top:30%;right:30%;vertical-align:middle}.box_featured{position:absolute;bottom:0;opacity:0;-webkit-transition:all 0.7s ease 0s;-moz-transition:all 0.7s ease 0s;transition:all 0.7s ease 0s}.box_featured .info{-webkit-transition:all 0.7s ease 0s;-moz-transition:all 0.7s ease 0s;transition:all 0.7s ease 0s;position:relative;padding:6px;z-index:99;top:0;left:0;width:5rem;height:5rem;text-align:center}.mg_box--x10{margin:10px}.mg_box--x15{margin:15px}.mg_box--x20{margin:20px}.mg_box--x30{margin:30px}.mg_top--x5{margin-top:5px}.mg_top--x10{margin-top:10px}.mg_top--x15{margin-top:15px}.mg_top--x20{margin-top:20px}.mg_top--x30{margin-top:30px}.mg_top--x50{margin-top:50px}.mg_top--x100{margin-top:100px}@media only screen and (min-width: 768px){.mg_top--x100i{margin-top:50px !important}}@media only screen and (min-width: 1024px){.mg_top--x100i{margin-top:100px !important}}.mg_top--x150{margin-top:150px}@media only screen and (min-width: 768px){.mg_top--x150i{margin-top:105px !important}}@media only screen and (min-width: 1024px){.mg_top--x150i{margin-top:150px !important}}.mg_bottom--x5{margin-bottom:5px}.mg_bottom--x10{margin-bottom:10px}.mg_bottom--x15{margin-bottom:15px}.mg_bottom--x20{margin-bottom:20px}.mg_bottom--x30{margin-bottom:30px}.mg_bottom--x50{margin-bottom:50px}.mg_bottom--x100{margin-bottom:100px}.mg_left--x10{margin-left:10px}.mg_left--x20{margin-left:20px}.mg_left--x30{margin-left:30px}.mg_left--x100{margin-left:100px}.mg_right--x10{margin-right:10px}.mg_right--x100{margin-right:100px}.pd_site{padding:20px}.pd_footer{padding:30px 0px}.pd_newslater{padding:50px 0px}.pd_breadcrumbs{padding:25px 0px}.pd_box--x10{padding:10px}.pd_box--x15{padding:15px}.pd_box--x20{padding:20px}.pd_top--x10{padding-top:10px}.pd_top--x15{padding-top:15px}.pd_top--x20{padding-top:20px}.pd_top--x50{padding-top:50px}.pd_top--x100{padding-top:100px}@media only screen and (min-width: 768px){.pd_top--x100i{padding-top:50px !important}}@media only screen and (min-width: 1024px){.pd_top--x100i{padding-top:100px !important}}.pd_top--x200{padding-top:200px}.pd_bottom--x10{padding-bottom:10px}.pd_bottom--x15{padding-bottom:15px}.pd_bottom--x20{padding-bottom:20px}.pd_bottom--x50{padding-bottom:50px}.pd_bottom--x100{padding-bottom:100px}.pd_bottom--x100i{padding-bottom:100px !important}.pd_bottom--x200{padding-bottom:200px}.pd_left--x10{padding-left:10px}.pd_left--x15{padding-left:15px}.pd_left--x100{padding-left:100px}.pd_right--x10{padding-right:10px}.pd_right--x15{padding-right:15px}.pd_right--x50{padding-right:50px}.pd_right--x100{padding-right:100px}.title,.subtitle,.paragraf{display:block}.subtitle_into:before{content:"";width:50px;height:2px;display:block;background-color:#4DAEDE;margin-bottom:12px}.title span{display:inline-block;margin-right:10px}.title h2,.title h3,.title h4,.title h5,.title h6,.title p,.title b,.title small{display:inline-block}.txt_italic{font-style:italic}.txt_center{text-align:center}.txt_upper{text-transform:uppercase}.txt_capital{text-transform:capitalize}.txt_right{text-align:right}.txt_shadow h2,.txt_shadow h3,.txt_shadow h4,.txt_shadow h5,.txt_shadow h6,.txt_shadow p,.txt_shadow b,.txt_shadow small{text-shadow:0px 2px 2px #000}.txt_shadow span{text-shadow:0px 2px 2px #000}.txt_size--em3{font-size:3rem}.txt_size--em4{font-size:4rem}.txt_size--em8{font-size:8rem}.va_m{vertical-align:middle}.va_m span{vertical-align:middle}.va_t{vertical-align:top}.va_t span{vertical-align:top}.zindx_1{z-index:1}.list--inline{padding-right:0px;padding-left:0px;margin:0px;list-style:none;vertical-align:middle;position:relative}.list--inline>li{display:inline-block;padding-left:10px;padding-right:10px;vertical-align:middle;position:relative;z-index:19}.list--line{padding:0px;margin:0px;list-style:none;vertical-align:middle;position:relative}.list--line>li{display:block}.list_products{width:100%;height:20vh;position:relative;overflow:visible}.list_products>li{width:380px;height:288px;display:block;position:absolute;top:0;left:393px}.list_products>li:first-child{height:500px;left:0}.list_inside{width:100%}.list_inside>li{width:278px;display:inline-block}.list_download>li{width:100%}.list_download>li span,.list_download>li .title{display:inline-block}.list_social li{width:25px;height:25px;background-color:#4DAEDE;border-radius:25%;text-align:center;padding:3px 0px}.list_breadcrumbs li:first-child:after{content:"\e909";font-family:'icomoon' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#4DAEDE}.list_breadcrumbs li a{margin-right:12px}.list_siderbar li{position:relative}.list_siderbar li a{padding-left:25px}.list_siderbar li:after{content:"\e90a";font-family:'icomoon' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#4DAEDE;position:absolute;top:35%;left:0}.circle{display:inline-block;border-radius:50%}hr{border:0;margin:0;padding:0;display:block}.hr_site{height:2px}.hr_site--full{width:100%}.hr_site--blue{background-color:#4DAEDE}.hr_site--white{background-color:#fff}.img_responsive{max-width:100%;height:auto;width:100%}figure.figure_about{display:block;margin:0 5%}figure.figure_about .bgi{width:100%;height:20vh}.image{background-position:center center;background-repeat:no-repeat;background-size:100%}.hidden{display:none !important}@media (min-width: 0px) and (max-width: 768px){.hidden-sm{display:none}}@media (min-width: 768px) and (max-width: 1024px){.hidden-md{display:none}}@media (min-width: 1024px) and (max-width: 1600px){.hidden-lg{display:none}}@media only screen and (min-width: 1600px){.hidden-lg{display:none}}main.middle{width:78%;max-width:1024px;margin:0 auto}@media only screen and (min-width: 1600px){main.middle{max-width:none}}main.full--float{width:100%;display:inline-block;position:absolute;top:-37px;z-index:-1}main.full--float .container{padding:0 2.0rem}@media only screen and (min-width: 768px){main.full--float .container{max-width:768px;margin:0 auto}}@media only screen and (min-width: 1024px){main.full--float .container{max-width:1024px}}@media only screen and (min-width: 1600px){main.full--float .container{max-width:1400px}}main.full{width:100%;display:inline-block;position:relative}main.full .container{padding:0 2.0rem}@media only screen and (min-width: 768px){main.full .container{max-width:768px;margin:0 auto}}@media only screen and (min-width: 1024px){main.full .container{max-width:1024px}}@media only screen and (min-width: 1600px){main.full .container{max-width:1400px}}section::after{clear:both;content:"";display:block}section.full{width:100%;margin:0 1% 4em 0}.container{margin:0 auto;max-width:112.0rem;position:relative;width:100%}.row{display:flex;flex-direction:column;padding:0;width:100%}.row.row-no-padding{padding:0}.row.row-no-padding>.column{padding:0}.row.row-wrap{flex-wrap:wrap}.row.row-top{align-items:flex-start}.row.row-bottom{align-items:flex-end}.row.row-center{align-items:center}.row.row-stretch{align-items:stretch}.row.row-baseline{align-items:baseline}.row .column{display:inline-block;flex:1;margin-left:0;min-width:100%;position:relative}.row .column .content{display:inline-block}.row .column.center{margin:0 auto}.row .column.column-min{flex:1;min-width:100%}@media only screen and (min-width: 768px){.row .column.column-min{flex:0 0 5%;min-width:32.1%}}@media only screen and (min-width: 1024px){.row .column.column-min{flex:0 0 5%;min-width:32.25%}}.row .column.column-middle{width:100%}@media only screen and (min-width: 768px){.row .column.column-middle{flex:0 0 5%;min-width:48.9%}}@media only screen and (min-width: 1024px){.row .column.column-middle{flex:0 0 5%;min-width:49.25%}}.row .column.column-full{min-width:100%}.row .column.inside-min{flex:1;min-width:100%}@media only screen and (min-width: 768px){.row .column.inside-min{flex:0 0 5%;min-width:32.1%}}@media only screen and (min-width: 1024px){.row .column.inside-min{flex:0 0 5%;min-width:20.25%}}.row .column.inside-middle{width:100%}@media only screen and (min-width: 768px){.row .column.inside-middle{flex:0 0 5%;min-width:70.9%}}@media only screen and (min-width: 1024px){.row .column.inside-middle{flex:0 0 5%;min-width:85.25%}}@media only screen and (min-width: 768px){.row{flex-direction:row;width:100%}}.btn{border:none;box-shadow:none;border-radius:none;font-size:1.4rem;font-family:"Oswald",sans-serif;padding:0.8em 2.2em;display:block;cursor:pointer;font-weight:600;-webkit-appearance:inherit;-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}.btn span[class^="icon-"],.btn span[class*=" icon-"]{margin-left:10px;font-size:12px;-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}.btn--full{width:100%;display:block}.btn_line{background-color:transparent;border:2px solid #fff;color:#fff;text-align:center}.btn_line:hover,.btn_line:active,.btn_line:focus{background-color:#0983BE}.btn_site{background-color:#4DAEDE;border-bottom:2px solid transparent;color:#fff;text-transform:uppercase}.btn_site:hover,.btn_site:active,.btn_site:focus{background-color:#0983BE;border-bottom:2px solid #4DAEDE}.btn_gosth{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;text-indent:200%;white-space:nowrap;font-size:0;opacity:0;cursor:pointer}.header_wrapper{width:100%;z-index:1000}.header_wrapper header{position:absolute;margin-top:35px;top:0;left:0;z-index:1;width:100%}.header_wrapper header .container{padding:12px 12px 0px 12px}.column_brand,.column_nav{display:inline-block;vertical-align:bottom;padding:12px 5px 0px;text-align:right}.column_brand{width:20%;padding-bottom:12px}.column_nav{width:75%}nav .nav--site{position:fixed;top:-22px;left:0;width:100%;height:150vh;padding-top:75px;padding-left:0px;padding-right:0px;padding-bottom:50px;text-align:center;z-index:100;background-color:#fff;-webkit-transform:translateX(-100%);-moz-transform:translateX(-100%);-ms-transform:translateX(-100%);-o-transform:translateX(-100%);transform:translateX(-100%);-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}@media only screen and (min-width: 1024px){nav .nav--site{position:static;padding:0;margin:0;top:0;width:auto;height:auto;display:inline}}nav .nav--site li{position:relative;list-style:none;width:100%;text-align:center;margin:0px;padding:0px;-webkit-transition:all 0.7s ease-in-out;-moz-transition:all 0.7s ease-in-out;transition:all 0.7s ease-in-out}@media only screen and (min-width: 1024px){nav .nav--site li{display:inline-block;vertical-align:middle;position:relative;z-index:150px;width:auto}}nav .nav--site li a{margin:0px;color:#000;text-transform:uppercase;display:block;cursor:pointer;padding:15px;font-size:13px;font-weight:500;position:relative}nav .nav--site li a:hover,nav .nav--site li a:active,nav .nav--site li a:focus{color:#4DAEDE}nav .nav--site li a:hover:after,nav .nav--site li a:active:after,nav .nav--site li a:focus:after{background-color:#4DAEDE;width:100%}nav .nav--site li a:after{content:"";width:0%;height:5px;background-color:transparent;display:block;position:absolute;bottom:0;left:0;-webkit-transition:all 0.7s ease-in-out;-moz-transition:all 0.7s ease-in-out;transition:all 0.7s ease-in-out}.nav_trigger{display:inline-block;padding-bottom:10px;overflow:hidden;white-space:nowrap;color:transparent;z-index:151;position:absolute;top:35%;right:0px}@media only screen and (min-width: 1024px){.nav_trigger{display:none}}.nav_trigger span{position:absolute;height:2px;width:20px;top:10px;left:0;margin-left:0;background-color:#4DAEDE;-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}.nav_trigger span:before,.nav_trigger span:after{content:'';position:absolute;width:100%;height:100%;backface-visibility:hidden;will-change:transform;background-color:#4DAEDE;-webkit-transform:translateZ(0);-moz-transform:translateZ(0);-ms-transform:translateZ(0);-o-transform:translateZ(0);transform:translateZ(0);-webkit-transition:-webkit-transform .3s .3s;-moz-transition:-moz-transform .3s .3s;transition:transform .3s .3s}.nav_trigger span:before{-webkit-transform:translateY(-6px);-moz-transform:translateY(-6px);-ms-transform:translateY(-6px);-o-transform:translateY(-6px);transform:translateY(-6px)}.nav_trigger span:after{-webkit-transform:translateY(6px);-moz-transform:translateY(6px);-ms-transform:translateY(6px);-o-transform:translateY(6px);transform:translateY(6px)}.nav-is-visible .nav--site{-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.nav-is-visible .nav_trigger span{background-color:rgba(255,255,255,0)}.nav-is-visible .nav_trigger span:before{-webkit-transform:translateY(0) rotate(-45deg);-moz-transform:translateY(0) rotate(-45deg);-ms-transform:translateY(0) rotate(-45deg);-o-transform:translateY(0) rotate(-45deg);transform:translateY(0) rotate(-45deg)}.nav-is-visible .nav_trigger span:after{-webkit-transform:translateY(0) rotate(45deg);-moz-transform:translateY(0) rotate(45deg);-ms-transform:translateY(0) rotate(45deg);-o-transform:translateY(0) rotate(45deg);transform:translateY(0) rotate(45deg)}.slider{position:relative;width:100%;height:80vh;overflow:hidden;background-color:#4DAEDE;margin-bottom:0px}.slick_slide--img{position:relative;opacity:1;display:table;background-position:center center;background-repeat:no-repeat;background-size:cover;height:100vh;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick_slide--img .info{position:absolute;bottom:35%;left:50%;right:auto;-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);-o-transform:translateX(-50%);transform:translateX(-50%);vertical-align:middle;text-align:center}.slider-nav .item{position:relative;vertical-align:middle}.slider-nav .item .image,.slider-nav .item .data{display:inline-block;width:80%;vertical-align:middle;position:relative;margin:0 12%;padding:12px}@media screen and (min-width: min-width 480px 12){.slider-nav .item .image,.slider-nav .item .data{width:100%;margin:0}}@media screen and (min-width: min-width 768px 12){.slider-nav .item .image,.slider-nav .item .data{width:45%;margin:0}}.slick-prev,.slick-next{top:inherit;bottom:16px;width:auto;height:auto;z-index:90}.slick-prev{left:6%}@media only screen and (min-width: 768px){.slick-prev{left:40%}}@media only screen and (min-width: 1024px){.slick-prev{left:47%}}.slick-prev:before{content:"\e908";font-family:'icomoon' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;font-size:45px}.slick-next{right:6%}@media only screen and (min-width: 768px){.slick-next{right:40%}}@media only screen and (min-width: 1024px){.slick-next{right:47%}}.slick-next:before{content:"\e909";font-family:'icomoon' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;font-size:45px}.services.slick-slider{margin-top:22px}.services .slick-prev,.services .slick-next{bottom:32%}.services .slick-prev:before,.services .slick-next:before{color:#4DAEDE}.services .slick-next{right:22%}.services .slick-prev{left:22%}.cd-slider-wrapper{position:relative;width:100%;height:60vh;overflow:hidden;background-color:silver}.cd-slider-wrapper .cd-slider,.cd-slider-wrapper .cd-slider>li{height:100%;width:100%;padding:0;margin:0}.cd-slider>li{position:absolute;top:0;left:0;opacity:0;display:table;background-position:center center;background-repeat:no-repeat;background-size:cover;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cd-slider>li.visible{position:relative;z-index:2;opacity:1}.cd-slider>li>div{display:table-cell;vertical-align:middle;text-align:center}.cd-slider-navigation{position:absolute;bottom:50px;left:50%;right:auto;-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);-o-transform:translateX(-50%);transform:translateX(-50%);z-index:3;text-align:center;width:90%}.cd-slider-navigation::after{clear:both;content:"";display:block}.cd-slider-navigation li{display:inline-block;margin-right:20px}.cd-slider-navigation li:last-of-type{margin-right:0}.cd-svg-cover{position:absolute;z-index:1;left:0;top:0;height:100%;width:100%;opacity:0}.cd-svg-cover path{fill:#4DAEDE}.cd-svg-cover.is-animating{z-index:4;opacity:1;-webkit-transition:opacity 0.6s;-moz-transition:opacity 0.6s;transition:opacity 0.6s}.inside.office{overflow:hidden;height:35vh;display:block;width:100%}.inside.office .image{width:100%;height:35vh;background-image:url("../images/inside/office/01.jpg")}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
